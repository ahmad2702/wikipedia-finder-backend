package de.htwberlin.f4.wikiplag.plagiarism

import de.htwberlin.f4.wikiplag.plagiarism.models.HyperParameters
import de.htwberlin.f4.wikiplag.utils.CassandraParameters
import de.htwberlin.f4.wikiplag.utils.database.CassandraClient
import org.junit.Assert._
import org.apache.spark.SparkContext
import org.junit._
import org.scalatest.junit.AssertionsForJUnit

/**
  * @author
  * Kirill P.
  */
object PlagiarismFinderTest extends AssertionsForJUnit{
  var finder: PlagiarismFinder = _
  var sc: SparkContext = _

  @BeforeClass
  def init(): Unit ={
    var cassandraParameters = CassandraParameters.readFromConfigFile("app.conf")
    val sparkConf = cassandraParameters.toSparkConf("[Wikiplag] Plagiarism finder")
    sc = new SparkContext(sparkConf)
    print("WTF")
    val cassandraClient = new CassandraClient(sc, cassandraParameters)
    finder = new PlagiarismFinder(cassandraClient)
  }

  @AfterClass
  def destroy() {
    sc.stop()
  }
}

class PlagiarismFinderTest extends AssertionsForJUnit {

  @Test def testPlagiarismFinderSentencePlagiate() {
    val input = raw"Ang Lee (|TEMPLATE|; * 23. Oktober 1954 in Pingtung, Taiwan) ist ein US-amerikanisch-taiwanischer Filmregisseur, Drehbuchautor und Produzent. Er ist als vielfach ausgezeichneter Regisseur bekannt für so unterschiedliche Filme wie Eat Drink Man Woman, die Jane-Austen-Adaption Sinn und Sinnlichkeit, den Martial Arts-Film Tiger and Dragon sowie Brokeback Mountain, für den er 2006 den Regie-Oscar erhielt. Einen weiteren Oscar erhielt er 2013 für seine Regiearbeit an Life of Pi: Schiffbruch mit Tiger.\n\n== Leben ==\nAng Lee wurde 1954 in Taiwan geboren. Seine Eltern, Emigranten aus China, lernten sich in Taiwan kennen, Lee ist ihr ältester Sohn. Die Großeltern väterlicher- und mütterlicherseits sind im Zuge der kommunistischen Revolution in China ums Leben gekommen. Da sein Vater als Lehrer häufiger die Arbeitsstelle wechselte, wuchs Ang Lee in verschiedenen Städten Taiwans auf.\n\nEntgegen den Wünschen seiner Eltern, wie sein Vater eine klassische akademische Laufbahn einzuschlagen, interessierte sich Lee für das Schauspiel und absolvierte mit ihrem Einverständnis zunächst ein Theater- und Filmstudium in Taipeh. Im Anschluss daran ging er 1978 in die USA, um an der Universität von Illinois in Urbana-Champaign Theaterwissenschaft und -regie zu studieren. Nach dem Erwerb seines B.A. in Illinois verlegte er sich ganz auf das Studium der Film- und Theaterproduktion an der Universität von New York, das er 1985 mit einem Master abschloss. Danach entschloss er sich, mit seiner ebenfalls aus Taiwan stammenden Ehefrau zusammen in den USA zu bleiben."
    val input2 = raw"Directors Guild of America Award ===\n* 1996: Nominierung in der Kategorie Beste Spielfilmregie für Sinn und Sinnlichkeit\n* 2001: Auszeichnung in der Kategorie Beste Spielfilmregie für Tiger & Dragon\n* 2006: Auszeichnung in der Kategorie Beste Spielfilmregie für Brokeback Mountain\n* 2013: Nominierung in der Kategorie Beste Spielfilmregie für Life of Pi: Schiffbruch mit Tiger\n\n=== Weitere Auszeichnungen ===\n* 1993: Goldener Bär der Berliner Filmfestspiele für Das Hochzeitsbankett\n* 1993: Golden Horse Beste Regie für Das Hochzeitsbankett\n* 1996: Goldener Bär der Berliner Filmfestspiele für Sinn und Sinnlichkeit\n* 1997: Bundesfilmpreis für den besten ausländischen Film mit Sinn und Sinnlichkeit\n* 2000: Golden Horse Bester Film für Tiger and Dragon\n* 2001: Hong Kong Film Award für Tiger and Dragon\n* 2002: Aufnahme in die American Academy of Arts and Sciences\n* 2005: Goldener Löwe des Filmfestivals in Venedig für Brokeback Mountain\n* 2007: Golden Horse Beste Regie für Gefahr und Begierde\n* 2007: Goldener Löwe des Filmfestivals in Venedig für Gefahr und Begierde\n\n== Siehe auch ==\n* Taiwanischer Film\n* US-amerikanischer Film\n\n== Literatur ==\n* Tanja Hanhart (Redaktorin): Ang Lee und sein Kino."
    //find plagiarisms using default hyper parameters
    val matches = PlagiarismFinderTest.finder.findPlagiarisms(input + input2, new HyperParameters())
    matches.foreach(println)
    matches.foreach(x => println("[" + (input + input2).substring(x._1.start, x._1.end) + "] Matches: " + x._2))
    val str2 = matches.toString
    val containsExpectedPlagiarismText = str2.contains("löwe, der, filmfestspiele, von, venedig, sowie, die, auszeichnung") && str2.contains("chinesischsprachige") && str2.contains("tanja, hanhart")
    assert(containsExpectedPlagiarismText)
  }

  @Test def testPlagiarismFinderPartOfSentencePlagiate() {
    val input = raw"\n\n; Konsistenz\n: Ein Kalkül wird genau dann konsistent genannt, wenn es unmöglich ist, mit Hilfe seiner Axiome und Regeln einen Widerspruch herzuleiten, d.\xa0h. eine Aussage der Form P ∧ ¬ P (z.\xa0B. „Hugo ist groß, und Hugo ist nicht groß“). Für einen Kalkül, der in der Aussagenlogik verwendet werden soll, ist das eine Mindestanforderung.\n: Ist es in einem Kalkül möglich, einen Widerspruch herzuleiten, dann wird der Kalkül inkonsistent genannt.\n: Es gibt formale Systeme, in denen solch ein Widerspruch hergeleitet werden kann, die aber durchaus sinnvoll sind. Für solche Systeme wird ein anderer Konsistenzbegriff verwendet: Ein Kalkül ist konsistent, wenn in ihm nicht alle Formeln herleitbar sind (siehe parakonsistente Logik).\n: Es lässt sich leicht zeigen, dass für die klassische Logik die beiden Konsistenzbegriffe zusammenfallen: In der klassischen Logik lässt sich aus einem Widerspruch jeder beliebige Satz herleiten (dieser Sachverhalt wird Ex falso quodlibet genannt), d.\xa0h. wenn ein klassischer Kalkül auch nur einen Widerspruch herleiten könnte, also im ersten Sinn inkonsistent wäre, dann könnte er jede Aussage herleiten, wäre also im zweiten Sinn inkonsistent. Wenn umgekehrt ein Kalkül inkonsistent im zweiten Sinn ist, also in ihm jede Aussage herleitbar ist, dann ist insbesondere auch jeder Widerspruch herleitbar und ist er auch inkonsistent im ersten Sinn.\n\n; Korrektheit\n: Ein Kalkül heißt genau dann korrekt (semantisch korrekt), wenn in ihm nur solche Formeln hergeleitet werden können, die auch semantisch gültig sind. Für die klassische Aussagenlogik bedeutet das einfacher: Ein Kalkül ist genau dann korrekt, wenn in ihm nur Tautologien bewiesen und nur gültige Argumente hergeleitet werden können.\n: Ist es in einem aussagenlogischen Kalkül möglich, mindestens ein ungültiges Argument herzuleiten oder mindestens eine Formel zu beweisen, die keine Tautologie ist, dann ist der Kalkül inkorrekt.\n\n; Vollständigkeit\n: Vollständig (semantisch vollständig) heißt ein Kalkül genau dann, wenn in ihm alle semantisch gültigen Formeln hergeleitet werden können; für die klassische Aussagenlogik: Wenn in ihm alle Tautologien hergeleitet werden können.\n\n; Adäquatheit\n: Ein Kalkül heißt genau dann im Hinblick auf eine spezielle Semantik adäquat, wenn er (semantisch) korrekt und (semantisch) vollständig ist.\n\nEin metatheoretisches Resultat ist zum Beispiel die Feststellung, dass alle korrekten Kalküle auch konsistent sind. Ein anderes metatheoretisches Resultat ist die Feststellung, dass ein konsistenter Kalkül nicht automatisch korrekt sein muss: Es ist ohne weiteres möglich, einen Kalkül aufzustellen, in dem zwar kein Widerspruch hergeleitet werden kann, in dem aber z.\xa0B. die nicht allgemeingültige Aussage der Form „A ∨ B“ hergeleitet werden kann. Ein solcher Kalkül wäre aus ersterem Grund konsistent, aus letzterem Grund aber nicht korrekt.\n\nEin weiteres, sehr einfaches Resultat ist die Feststellung, dass ein vollständiger Kalkül nicht automatisch auch korrekt oder nur konsistent sein muss. Das einfachste Beispiel wäre ein Kalkül, in dem jede Formel der aussagenlogischen Sprache herleitbar ist. Da jede Formel herleitbar ist, sind alle Tautologien herleitbar, die ja Formeln sind: Das macht den Kalkül vollständig. Da aber jede Formel herleitbar ist, ist insbesondere auch die Formel P0 ∧ ¬ P0 und die Formel A ∨ B herleitbar: Ersteres macht den Kalkül inkonsistent, letzteres inkorrekt.\n\nDas Ideal, das ein Kalkül erfüllen sollte, ist Korrektheit und Vollständigkeit: Wenn das der Fall ist, dann ist er der ideale Kalkül für ein logisches System, weil er alle semantisch gültigen Sätze (und nur diese) herleiten kann. So sind die beiden Fragen, ob ein konkreter Kalkül korrekt und/oder vollständig ist und ob es für ein bestimmtes logisches System überhaupt möglich ist, einen korrekten und vollständigen Kalkül anzugeben, zwei besonders wichtige metatheoretische Fragestellungen.\n\n== Abgrenzung und Philosophie ==\n\nDie klassische Aussagenlogik, wie sie hier ausgeführt wurde, ist ein formales logisches System. Als solches ist sie eines unter vielen, die aus formaler Sicht gleichwertig nebeneinander stehen und die ganz bestimmte Eigenschaften haben: Die meisten sind konsistent, die meisten sind korrekt, etliche sind vollständig, und einige sind sogar entscheidbar. Aus formaler Sicht stehen die logischen Systeme in keinem Konkurrenzverhalten hinsichtlich Wahrheit oder Richtigkeit.\n\nVon formalen, innerlogischen Fragen klar unterschieden sind außerlogische Fragen: Solche nach der Nützlichkeit (Anwendbarkeit) einzelner Systeme für einen bestimmten Zweck und solche nach dem philosophischen, speziell metaphysischen Status einzelner Systeme.\n\nDie Nützlichkeitserwägung ist die einfachere, bezüglich deren Meinungsunterschiede weniger tiefgehend bzw. weniger schwerwiegend sind. Klassische Aussagenlogik zum Beispiel bewährt sich in der Beschreibung elektronischer Schaltungen (Schaltalgebra) oder zur Formulierung und Vereinfachung logischer Ausdrücke in Programmiersprachen. Prädikatenlogik wird gerne angewandt, wenn es darum geht, Faktenwissen zu formalisieren und automatisiert Schlüsse daraus zu ziehen, wie das unter anderem im Rahmen der Programmiersprache Prolog geschieht. Fuzzy-Logiken, nonmonotone, mehrwertige und auch parakonsistente Logiken sind hochwillkommen, wenn es darum geht, mit Wissensbeständen umzugehen, in denen Aussagen mit unterschiedlich starkem Gewissheitsgrad oder gar einander widersprechende Aussagen abgelegt werden sollen und dennoch sinnvolle Schlüsse aus dem Gesamtbestand gezogen werden sollen. Auch wenn es je nach Anwendungsfall sehr große Meinungsunterschiede geben kann, welches logisches System besser geeignet ist, ist die Natur des Problems für alle Beteiligten unmittelbar und in gleicher Weise greifbar. Einzelwissenschaftliche Überlegungen und Fragestellungen spielen sich überwiegend in diesem Bereich ab.\n\n(Noch) kontroverser als solche pragmatischen Überlegungen sind Fragestellungen philosophischer und metaphysischer Natur. Geradezu paradigmatisch ist die Frage, „welches logische System richtig ist“, wobei „richtig“ hier gemeint ist als: Welches logische System nicht nur einen Teilaspekt der Wirklichkeit modellhaft vereinfacht, sondern die Wirklichkeit, das Sein als Ganzes adäquat beschreibt. Zu dieser Fragestellung gibt es viele unterschiedliche Meinungen einschließlich der vom philosophischen Positivismus eingeführten Meinung, dass die Fragestellung als Ganz"
    val input2 = raw"Prevailed sincerity behaviour to so do principle mr. As departure at no propriety zealously my. On dear rent if girl view. First on smart there he sense. Earnestly enjoyment her you resources. Brother chamber ten old against. Mr be cottage so related minuter is. Delicate say and blessing ladyship exertion few margaret. Delight herself welcome against smiling its for. Suspected discovery by he affection household of principle perfectly he."
    val matches = PlagiarismFinderTest.finder.findPlagiarisms(input + input2, new HyperParameters())
    matches.foreach(println)
    matches.foreach(x => println("[" + (input + input2).substring(x._1.start, x._1.end) + "] Matches: " + x._2))
    val str2 = matches.toString
    val containsExpectedPlagiarismText = str2.contains("Prevailed") || str2.contains("principle") || str2.contains("zealously")
    assertFalse(containsExpectedPlagiarismText)
  }


  @Test def testPlagiarismFinderSentenceNotPlagiate() {
    val input = raw"Jeremy Braddock, Stephen Hock Jeremy Braddock, Stephen Hock (Hrsg.): Directed by Allen Smithee. Foreword by Andrew Sarris."
    val input2 = raw"Die hatte den mit laut Börsenwerte. Oliver verwendet erfreuten drohte mit, und vermittelte Frau können war geben. Sie Mann Ausdruck Frau sie suspendiert, sah nicht an dem Gemeinde Armenhaus. Oh verhaftet Software erst ihr, das alles er bietet und. Und erfahrungsgemäß Fenster ein schwache noch Andeutungen eigentlich Arzt Stadt Annehmlichkeiten. Der niemals wurden müssen durch Verfahren, man mitlachen sie berühmtes sie Auftrag der sicher Personen, die sozialen Gut damit können Ich durch. Besonders Begriff stand von hatte einigen vor, wenn auf zu Namens offenbar brachte ungewöhnlichen Wächtern betrachtete, tatsächlich wäe und Ausstrecken greisenhafter hierbleiben erklärte herrschte Weise bekämen. Besonders aber die."
    val matches = PlagiarismFinderTest.finder.findPlagiarisms(input + input2, new HyperParameters())
    matches.foreach(println)
    matches.foreach(x => println("[" + (input + input2).substring(x._1.start, x._1.end) + "] Matches: " + x._2))
    val str2 = matches.toString
    val containsExpectedPlagiarismText = str2.contains("Namens offenbar brachte ungewöhnlichen Wächtern") && !str2.isEmpty && !str2.contains("Jeremy Braddock")
    assertFalse(containsExpectedPlagiarismText)
  }

  @Test def testPlagiarismFinderSentencePlagiateWithoutStopWords() {
    val input = raw"Actinium radioaktives chemisches Element dem Elementsymbol Ac der Ordnungszahl 89. Im Periodensystem Elemente steht es in 3.\xa0IUPAC-Gruppe, der Scandiumgruppe. Das Element Metall gehört zur 7.\xa0Periode, d-Block. Es der Namensgeber der Gruppe der Actinoide, der folgenden 14 Elemente.\n\n== Geschichte ==\n\nDas Actinium wurde Jahr 1899 französischen Chemiker André-Louis Debierne entdeckt, der es aus Pechblende isolierte ihm zunächst Ähnlichkeiten mit dem Titan dem Thorium zuschrieb; Bezeichnung leitete er wegen der Radioaktivität griechisch ἀκτίς aktís ‚Strahl‘ ab. Friedrich Giesel entdeckte Element unabhängig davon Jahr 1902 und beschrieb Ähnlichkeit Lanthan; er gab den Namen Emanium, Bildung zu lateinisch emano ‚ausfließen‘, ebenfalls mit Bezug abgegebenen Strahlung. Nachdem Actinium und Emanium Jahre 1904 als identisch erkannt worden waren, wurde Debiernes Namensgebung Vorzug gegeben, da zuerst entdeckt hatte.Die Geschichte der Entdeckung wurde Publikationen von 1971 und später Jahr 2000 immer noch als fraglich beschrieben. Sie zeigen, dass Publikationen von 1904 einerseits von 1899 1900 andererseits Widersprüche aufweisen."
    val input2 = raw"Gewinnung Darstellung Da Uranerzen nur wenig Actinium vorhanden spielt diese Quelle keine Rolle für Gewinnung."
    val matches = PlagiarismFinderTest.finder.findPlagiarisms(input + input2, new HyperParameters())
    matches.foreach(println)
    matches.foreach(x => println("[" + (input + input2).substring(x._1.start, x._1.end) + "] Matches: " + x._2))
    val str2 = matches.toString
    val containsExpectedPlagiarismText = !str2.contains("spielt diese Quelle") && str2.contains("ein, radioaktives, chemisches, element, mit, dem, elementsymbol, ac, und, der, ordnungszahl, 89")
    assert(containsExpectedPlagiarismText)
  }

  @Test def testPlagiarismFinderRawTextPlagiate() {
    val input = raw"Actinium | |TEMPLATE|\n\nActinium ist ein radioaktives chemisches Element mit dem Elementsymbol Ac und der Ordnungszahl 89. Im Periodensystem der Elemente steht es in der 3.\xa0IUPAC-Gruppe, der Scandiumgruppe. Das Element ist ein Metall und gehört zur 7.\xa0Periode, d-Block. Es ist der Namensgeber der Gruppe der Actinoide, der ihm folgenden 14 Elemente.\n\n== Geschichte ==\n\nDas Actinium wurde im Jahr 1899 von dem französischen Chemiker André-Louis Debierne entdeckt, der es aus Pechblende isolierte und ihm zunächst Ähnlichkeiten mit dem Titan oder dem Thorium zuschrieb; seine Bezeichnung leitete er wegen der Radioaktivität von griechisch ἀκτίς aktís ‚Strahl‘ ab. Friedrich Giesel entdeckte das Element unabhängig davon im Jahr 1902 und beschrieb eine Ähnlichkeit zum Lanthan; er gab ihm den Namen Emanium, eine Bildung zu lateinisch emano ‚ausfließen‘, ebenfalls mit Bezug zur abgegebenen Strahlung. Nachdem Actinium und Emanium im Jahre 1904 als identisch erkannt worden waren, wurde Debiernes Namensgebung der Vorzug gegeben, da er es zuerst entdeckt hatte.\n\nDie Geschichte der Entdeckung wurde in Publikationen von 1971 und später im Jahr 2000 immer noch als fraglich beschrieben. Sie zeigen, dass die Publikationen von 1904 einerseits und die von 1899 und 1900 andererseits Widersprüche aufweisen.\n\n== Gewinnung und Darstellung ==\nDa in Uranerzen nur wenig Actinium vorhanden ist, spielt diese Quelle keine Rolle für die Gewinnung. Technisch wird das Isotop 227Ac durch Bestrahlung von 226Ra mit Neutronen in Kernreaktoren hergestellt.\n\n:Die Zeitangaben sind Halbwertszeiten.\n\nDurch den schnellen Zerfall des Actiniums waren stets nur geringe Mengen verfügbar. Die erste künstliche Herstellung von Actinium wurde im Argonne National Laboratory in Chicago durchgeführt.\n\n== Eigenschaften ==\n=== Physikalische Eigenschaften ===\nDas Metall ist silberweiß glänzend und relativ weich. Aufgrund seiner starken Radioaktivität leuchtet Actinium im Dunkeln in einem hellblauen Licht.\n\nActinium ist das namensgebende Element der Actinoiden, ähnlich wie Lanthan für die Lanthanoiden. Die Gruppe der Elemente zeigt deutlichere Unterschiede als die Lanthanoide; daher dauerte es bis 1945, bis Glenn T. Seaborg die wichtigsten Änderungen zum Periodensystem von Mendelejew vorschlagen konnte: die Einführung der Actinoide.\n\n=== Chemische Eigenschaften ===\nEs ist sehr reaktionsfähig und wird von Luft und Wasser angegriffen, überzieht sich aber mit einer Schicht von Actiniumoxid, wodurch es vor weiterer Oxidation geschützt ist. Das Ac3+-Ion ist farblos. Das chemische Verhalten von Actinium ähnelt sehr dem Lanthan. Actinium ist in allen zehn bekannten Verbindungen dreiwertig.\n\n== Isotope ==\nBekannt sind 26 Isotope, wovon nur zwei natürlich vorkommen. Das langlebigste Isotop 227Ac (Halbwertszeit 21,8\xa0Jahre) hat zwei Zerfallskanäle: es ist ein Alpha- und Beta-Strahler. 227Ac ist ein Zerfallsprodukt des Uranisotops 235U und kommt zu einem kleinen Teil in Uranerzen vor. Daraus lassen sich wägbare Mengen 227Ac gewinnen, die somit ein verhältnismäßig einfaches Studium dieses Elementes ermöglichen. Da sich unter den radioaktiven Zerfallsprodukten einige Gammastrahler befinden, sind aber aufwändige Strahlenschutzvorkehrungen nötig.\n\n== Verwendung ==\nActinium wird zur Erzeugung von Neutronen eingesetzt, die bei Aktivierungsanalysen eine Rolle spielen. Außerdem wird es für die thermoionische Energieumwandlung genutzt.\n\nBeim dualen Zerfall des 227Ac geht der größte Teil unter Emission von Beta-Teilchen in das Thoriumisotop 227Th, aber ca. 1 % zerfällt durch Alpha-Emission zu Francium 223Fr. Eine Lösung von 227Ac ist daher als Quelle für das kurzlebige 223Fr verwendbar. Letzteres kann dann regelmäßig abgetrennt und untersucht werden.\n\n== Sicherheitshinweise ==\nEinstufungen nach der CLP-Verordnung liegen nicht vor, weil diese nur die chemische Gefährlichkeit umfassen und eine völlig untergeordnete Rolle gegenüber den auf der Radioaktivität beruhenden Gefahren spielen. Auch Letzteres gilt nur, wenn es sich um eine dafür relevante Stoffmenge handelt.\n\n== Verbindungen ==\nNur eine geringe Anzahl von Actiniumverbindungen ist bekannt. Mit Ausnahme von AcPO4 sind sie alle den entsprechenden Lanthanverbindungen ähnlich und enthalten Actinium in der Oxidationsstufe +3. Insbesondere unterscheiden sich die Gitterkonstanten der jeweiligen Lanthan- und Actinium-Verbindungen nur in wenigen Prozent.\n\n \n\n=== Oxide ===\nActinium(III)-oxid\xa0(Ac2O3) kann durch Erhitzen des Hydroxids bei 500\xa0°C oder des Oxalats bei 1100\xa0°C im Vakuum erhalten werden. Das Kristallgitter ist isotyp mit den Oxiden der meisten dreiwertigen Seltenerdmetalle.\n\n=== Halogenide ===\nActinium(III)-fluorid\xa0(AcF3) kann entweder in Lösung oder durch Feststoffreaktion dargestellt werden. Im ersten Fall gibt man bei Raumtemperatur Flusssäure zu einer Ac3+-Lösung und fällt das Produkt aus. im anderen Fall wird Actinium-Metall mit Fluorwasserstoff bei 700\xa0°C in einer Platinapparatur behandelt.\n\nActinium(III)-chlorid\xa0(AcCl3) wird durch Umsetzung von Actiniumhydroxid oder -oxalat mit Tetrachlormethan bei Temperaturen oberhalb von 960\xa0°C erhalten.\n\nDie Reaktion von Aluminiumbromid und Actinium(III)-oxid führt zum Actinium(III)-bromid\xa0(AcBr3) und Behandlung mit feuchtem Ammoniak bei 500\xa0°C führt zum Oxibromid AcOBr.\n\n=== Weitere Verbindungen ===\nGibt man Natriumdihydrogenphosphat\xa0(NaH2PO4) zu einer Lösung von Actinium in Salzsäure, erhält man weiß gefärbtes Actiniumphosphat\xa0(AcPO4\xa0·\xa00,5\xa0H2O); ein Erhitzen von Actinium(III)-oxalat mit Schwefelwasserstoff bei 1400\xa0°C für ein paar Minuten führt zu schwarzem Actinium(III)-sulfid\xa0(Ac2S3).\n\n== Literatur ==\n* Harold W. Kirby, Lester R. Morss: Actinium, in: Lester R. Morss, Norman M. Edelstein, Jean Fuger (Hrsg.): The Chemistry of the Actinide and Transactinide Elements, Springer, Dordrecht 2006; ISBN 1-4020-3555-1, S.\xa018–51 ().\n\n== Weblinks ==\n|TEMPLATE|\n|TEMPLATE|\n* |TEMPLATE|\n\n== Einzelnachweise ==\n\n|TEMPLATE|\n\n|TEMPLATE|"
    val input2 = raw""
    val matches = PlagiarismFinderTest.finder.findPlagiarisms(input + input2, new HyperParameters())
    matches.foreach(println)
    matches.foreach(x => println("[" + (input + input2).substring(x._1.start, x._1.end) + "] Matches: " + x._2))
    val str2 = matches.toString
    val containsExpectedPlagiarismText = str2.contains("14, elemente, das, actinium, wurde, im, jahr, 1899, von, dem, französischen, chemiker, andré, louis") && !str2.contains("TEMPLATE") && !str2.contains("auch")
    assert(containsExpectedPlagiarismText)
  }

  @Test def testPlagiarismFinderRawArticlePlagiate() {
    val input = raw"erst nachher wird die Straße nass“. Wenn man die hinreichende Bedingung in diesem Sinn missversteht, dann ist es klar, dass die in umgekehrter Reihenfolge formulierte notwendige Bedingung „Nur wenn die Straße nass ist, regnet es“ seltsam aussieht: „Regen verursacht doch Straßennässe, wie kann daraus je gefolgert werden, dass Straßennässe Regen verursacht?“\n\nAll dies sagt die materiale Implikation aber nicht aus. „A ist eine hinreichende Bedingung für B“ meint schlicht, dass wenn die Aussage A wahr ist, auch die Aussage B wahr ist – zeitlos und zusammenhanglos, nicht etwa „später“ oder „weil“.\n\nAnalog sagt die notwendige Bedingung, „B ist eine notwendige Bedingung für A“, lediglich das aus, dass B wahr ist, sofern A es ist. Genau das ist aber die Definition des Konditionals A → B.\n\n|TEMPLATE|\n\n== Formaler Zugang ==\n\n=== Einleitung ===\n\nSpätestens beim lauten Lesen von Sätzen wie:\n\n: „Die Aussage ist genau dann wahr, wenn die Aussagen A und B wahr sind“,\n\nwird der selbstbewusste Laie verlangen, dass ihm erklärt wird, was das soll.\n\nDie Antwort des Logikers: Es soll versucht werden, Sicherheit in die Regeln des logischen Schließens zu bringen. Seit den Sophisten ist dem Abendland klar, dass scheinbar zwingende Schlüsse zu offensichtlich absurden Ergebnissen führen können. Immer wieder wurden Paradoxien formuliert und von großen Denkern als Herausforderung empfunden. Logiker versuchen deshalb, die Regeln des Argumentierens so streng wie möglich zu fassen.\n\nDas einleitende Beispiel macht klar, dass dazu eine Trennung der Sprachebenen unerlässlich ist: Die formale Aussage A∧B soll dadurch erklärt werden, dass auf einer metasprachlichen Ebene über die Aussage A wie auch über die Aussage B geredet wird.\n\nEin Versuch dies durchzuführen, besteht darin, die Aussagenlogik als formales System, konkret als Kalkül (eine bestimmte Art eines formalen Systems) zu definieren. Die Begriffe „wahr“ und „falsch“ kommen in diesem System zunächst überhaupt nicht vor. Stattdessen werden Axiome gesetzt, die einfach als Zeichenketten angesehen werden, aus denen weitere ableitbare Zeichenketten aufgrund von bestimmten Schlussregeln hergeleitet werden.\n\nDas Ziel dabei ist einerseits, dass in einem formalen System nur Zeichenketten (Sätze) hergeleitet werden können, die bei einer plausiblen Interpretation auch wahr sind. Andererseits sollen alle Sätze, die als „wahr“ interpretierbar sind, auch hergeleitet werden können. Das erste ist die Forderung nach Korrektheit, das zweite die nach Vollständigkeit des formalen Systems; beide Eigenschaften sind unter Kalkül: Der Begriff Kalkül in der Logik beschrieben.\n\nFür die klassische Aussagenlogik, mit der wir es hier zu tun haben, gibt es Kalküle (formale Systeme), die sowohl korrekt als auch vollständig sind. Für komplexere logische Systeme (z.\xa0B. Mengenlehre) ist es aber unmöglich, einen vollständigen Kalkül aufzustellen, der auch korrekt ist – diese Erkenntnis wurde 1931 von Kurt Gödel bewiesen (Gödelscher Unvollständigkeitssatz).\n\n=== Syntax ===\n\nEs gibt viele verschiedene Möglichkeiten, die Syntax („Grammatik“) einer logischen Sprache formal zu definieren; meist geschieht das im Rahmen eines Kalküls. Die folgende Definition ist daher nur als Beispiel dafür zu verstehen, wie ein Kalkül für die klassische Aussagenlogik aussehen kann. Weitere Beispiele für konkrete Kalküle finden sich unter Baumkalkül, Begriffsschrift, Systeme natürlichen Schließens, Sequenzenkalkül oder Resolutionskalkül. Ein weiterer axiomatischer Kalkül ist als Beispiel im Artikel Hilbert-Kalkül angegeben, ein graphischer Kalkül im Artikel Existential Graphs.\n\n==== Bausteine der aussagenlogischen Sprache ====\n\nAls Bausteine der aussagenlogischen Sprache sollen Satzbuchstaben („atomare Formeln“, Satzkonstanten), Junktoren und Gliederungszeichen verwendet werden. Satzbuchstaben sollen die Zeichen P0, P1, P2, … sein. Junktoren sollen die Zeichen ¬, ∧, ∨, → und ↔ sein. Als Gliederungszeichen sollen die runden Klammern dienen.\n\nFormal lässt sich das z.\xa0B. auf folgende Weise ausdrücken:\n\nSei V die (abzählbar unendliche) Menge der atomaren Formeln (Satzbuchstaben):\n\n: V = {Pn | n ∈ N0} (N0: Menge der natürlichen Zahlen inkl. 0), d.\xa0h. V = {P0, P1, P2, P3, ...}\n\nSei J die Menge der Junktoren und Gliederungszeichen:\n\n: J = {¬, ∧, ∨, →, ↔, (, )}\n\nDas Alphabet der logischen Sprache sei die Menge V ∪ J, also die Vereinigungsmenge von atomaren Formeln, Junktoren und Gliederungszeichen.\n\n==== Formationsregeln ====\n\nDie Formationsregeln legen fest, wie man aus den Bausteinen der aussagenlogischen Sprache Sätze (Formeln) bilden kann.\n\nHier sollen aussagenlogische Formeln als Worte über dem Alphabet der logischen Sprache, also über V ∪ J wie folgt induktiv definiert werden:\n\n* Alle atomaren Formeln F ∈ V (d.\xa0h. alle Satzbuchstaben) sind Formeln.\n* Ist F eine Formel, so ist auch (¬F) eine Formel. (Diese Formel heißt Negation von F.)\n* Sind F und G zwei (nicht notwendigerweise unterschiedliche) Formeln, so ist auch (F ∧ G) eine Formel. (Diese Formel heißt Konjunktion von F und G.)\n* Sind F und G zwei (nicht notwendigerweise unterschiedliche) Formeln, so ist auch (F ∨ G) eine Formel. (Diese Formel heißt Disjunktion von F und G.)\n* Sind F und G zwei (nicht notwendigerweise unterschiedliche) Formeln, so ist auch (F → G) eine Formel. (Diese Formel heißt materiale Implikation oder";
    val input2 = raw"Aussagenlogik | Die Aussagenlogik ist ein Teilgebiet der Logik, das sich mit Aussagen und deren Verknüpfung durch Junktoren befasst, ausgehend von strukturlosen Elementaraussagen (Atomen), denen ein Wahrheitswert zugeordnet wird. In der klassischen Aussagenlogik wird jeder Aussage genau einer der zwei Wahrheitswerte „wahr“ und „falsch“ zugeordnet. Der Wahrheitswert einer zusammengesetzten Aussage lässt sich ohne zusätzliche Informationen aus den Wahrheitswerten ihrer Teilaussagen bestimmen.\n\n== Geschichte ==\nHistorisch geht die Aussagenlogik zurück bis zu Aristoteles, der erstmals aussagenlogische Grundsätze diskutierte, nämlich in seiner Metaphysik den Satz vom Widerspruch und den Satz vom ausgeschlossenen Dritten, und der in seiner ersten Analytik den indirekten Beweis thematisierte. Die zweiwertige aussagenlogische Semantik entwickelten etwas später die megarischen Philosophen Diodoros Kronos und Philon. Die Aussagensemantik und -axiomatik kombinierte der Stoiker Chrysippos von Soli, der den ersten aussagenlogischen Kalkül formulierte. Die Weiterentwicklung der Aussagenlogik der Stoa durch das Mittelalter wird oft übersehen. Eine erste vollständige und entscheidbare Formalisierung für aussagenlogische Tautologien –\xa0allerdings noch nicht für das aussagenlogische Schließen\xa0– schuf George Boole 1847 mit seinem algebraischen Logikkalkül. Den ersten aussagenlogischen Kalkül mit Schlussregeln formulierte Gottlob Frege im Rahmen seiner Begriffsschrift 1879. Er war die Vorlage für den Aussagenkalkül von Bertrand Russell 1910, der sich später durchsetzte (s.\xa0u.).\n\n== Zur Abgrenzung der klassischen Aussagenlogik ==\nDa in der heutigen Mathematik die klassische Aussagenlogik maßgeblich wurde, wird in diesem Artikel dieser moderne Haupttypus der Aussagenlogik behandelt. Allgemein ist die klassische Logik durch zwei Eigenschaften charakterisiert:\n\n* Jede Aussage hat einen von genau zwei Wahrheitswerten, meist „falsch“ oder „wahr“ (Prinzip der Zweiwertigkeit oder Bivalenzprinzip).\n* Der Wahrheitswert jeder zusammengesetzten Aussage ist eindeutig durch die Wahrheitswerte ihrer Teilaussagen bestimmt (Prinzip der Extensionalität oder Kompositionalität, siehe Extensionalitätsprinzip)\n\nDas Prinzip der Zweiwertigkeit wird oft mit dem Satz vom ausgeschlossenen Dritten verwechselt.\n\nDie klassische Aussagenlogik ist jenes Gebiet der klassischen Logik, das die innere Struktur von Sätzen (Aussagen) daraufhin untersucht, aus welchen anderen Sätzen (Teilsätzen) sie zusammengesetzt sind und wie diese Teilsätze miteinander verknüpft sind. Die innere Struktur von Sätzen, die ihrerseits nicht in weitere Teilsätze zerlegt werden können, wird von der Aussagenlogik nicht betrachtet. Ein Beispiel: Die Aussage „Alle Katzen sind Hunde, und die Erde ist eine Scheibe“ ist mit dem Bindewort „und“ aus den beiden kürzeren Aussagen „Alle Katzen sind Hunde“ und „Die Erde ist eine Scheibe“ zusammengesetzt. Diese beiden Aussagen lassen sich ihrerseits nicht mehr in weitere Aussagen zerlegen, sind aus aussagenlogischer Sicht also elementar oder atomar. Andere, auf die Aussagenlogik aufbauende logische Systeme betrachten die innere Struktur solcher atomaren Aussagen; ein wichtiges Beispiel ist die Prädikatenlogik.\n\nIn Abgrenzung zur klassischen Logik entstehen nichtklassische Logiksysteme, wenn man das Prinzip der Zweiwertigkeit, das Prinzip der Extensionalität oder sogar beide Prinzipien aufhebt. Nichtklassische Logiken, die durch die Aufhebung des Prinzips der Zweiwertigkeit entstehen, heißen mehrwertige Logik. Die Zahl der Wahrheitswerte (in diesem Falle üblicher: Pseudowahrheitswerte) kann dabei endlich sein (z.\xa0B. dreiwertige Logik), ist aber oft auch unendlich (z.\xa0B. Fuzzy-Logik). Hingegen verwenden Logiken, die durch die Aufhebung der Extensionalität entstehen, Junktoren (Konnektive), bei denen sich der Wahrheitswert des zusammengesetzten Satzes nicht mehr eindeutig aus dem Wahrheitswert seiner Teile bestimmen lässt. Ein Beispiel für nichtextensionale Logik ist die Modallogik, die die einstelligen nichtextensionalen Operatoren „es ist notwendig, dass“ und „es ist möglich, dass“ einführt.\n\nLogische Systeme stehen innerhalb der Logik nicht in einem Konkurrenzverhältnis um Wahrheit oder Richtigkeit. Die Frage, welches logische System für einen bestimmten Zweck genutzt werden soll, ist eher eine pragmatische.\n\nOft werden logische Systeme und logische Fragestellungen mit außerlogischen Fragen verwechselt oder vermischt, z.\xa0B. mit der metaphysischen Frage, welches logische System „richtig“ sei, d.\xa0h. die Wirklichkeit beschreibe. Zu dieser Frage gibt es unterschiedliche Standpunkte einschließlich des positivistischen Standpunkts, dass diese Frage sinnlos sei. Diese Fragen fallen aber in andere Gebiete, z.\xa0B. Philosophie, Wissenschaftstheorie und Sprachwissenschaft.\n\nWenn in diesem Artikel die klassische Aussagenlogik behandelt wird, so ist das also nicht als metaphysische Festlegung zu verstehen oder gar als Behauptung, dass „alle Aussagen wahr oder falsch sind“. Es ist lediglich so, dass die klassische Aussagenlogik einfach nur solche Aussagen behandelt, die wahr oder falsch sind. Das ist eine große formale Vereinfachung, die dieses System relativ leicht erlernbar sein lässt. Braucht man aus metaphysischen oder pragmatischen Gründen mehr als zwei Wahrheitswerte, kann die klassische Aussagenlogik als Ausgangspunkt dienen, um ein geeignetes logisches System aufzustellen.\n\n== Umgangssprachliche Einleitung ==\n\n=== Einfache Aussage (Elementaraussage) ===\n|TEMPLATE|\n\nEine Aussage A ist ein Satz, der entweder wahr (w, wahr, true, 1) oder nicht wahr (f, falsch, false, 0) ist. Das gilt sowohl für einfache als auch für verknüpfte Aussagen. „Halbwahrheiten“ gibt es nicht. Eine Aussage kann sowohl der gewöhnlichen Sprache entstammen als auch der Sprache der Mathematik. Eine Elementaraussage ist eine Aussage, die keine aussagenlogischen Verknüpfungen (nicht, und, oder, wenn … dann, genau dann wenn) enthält.\n\nBeispiele für Elementaraussagen:\n* : München ist 781 km von Hamburg entfernt.\n* : 9 ist durch 3 teilbar.\n* : Eintracht Frankfurt wird in der nächsten Saison deutscher Fußballmeister.\n* : Alle Autos sind grün.\n ist offensichtlich wahr, dagegen ist falsch. muss man zunächst prüfen,\nbevor man entscheiden kann, ob wahr oder falsch ist. Ob wahr ist, kann man derzeit nicht entscheiden. Das wird sich erst am Ende der nächsten Fußballsaison\nherausstellen.\n\nIn der klassischen Aussagenlogik ist eine Aussage entweder wahr oder nicht wahr, auch wenn man den Wahrheitsgehalt nicht kennt. Das ist zum Beispiel bei den ungelösten mathematischen Problemen der Fall.\n\nAnmerkung: ist eine All-Aussage; die Struktur solcher Aussagen ist Gegenstand der Prädikatenlogik. Im Sinne der Aussagenlogik ist es eine Elementaraussage.\n\n=== Verneinte Aussage – Negation ===\n|TEMPLATE|\n\nDie Verneinung bzw. Negation (auch: Satzverneinung, äußere Verneinung, kontradiktorisches Gegenteil) einer Aussage A ist diejenige Aussage ¬A, die genau dann wahr ist, wenn A falsch ist, und die genau dann falsch ist, wenn A wahr ist. Einfacher: Die Verneinung einer Aussage A dreht den Wahrheitswert von A in sein Gegenteil um.\n\nMan erhält die Verneinung einer Aussage A immer dadurch, dass man ihr die Formulierung „Es ist nicht der Fall, dass“ voranstellt. Zwar lässt sich ein natürlichsprachlicher Satz auch verneinen, indem man das Wort „nicht“ oder eine andere negative Formulierung an geeigneter Stelle einfügt – es ist aber nicht immer ganz einfach, zu erkennen, welche Formulierung zu verwenden und an welcher Stelle einzufügen ist. Formal schreibt man für „nicht A“ in der gebräuchlichsten Notation (Schreibweise) ¬A, auf Englisch und in der Schaltalgebra auch „NOT A“, gelegentlich auch „~A“.\n \n\nWir verneinen die obigen Beispiele:\n* : Es ist nicht der Fall, dass München 781 km von Hamburg entfernt ist.\n* : Es ist nicht der Fall, dass 9 durch 3 teilbar ist.\n* : Es ist nicht der Fall, dass Eintracht Frankfurt in der nächsten Saison deutscher Fußballmeister wird.\n* : Es ist nicht der Fall, dass alle Autos grün sind. (Es kann durchaus auch grüne Autos geben, aber es gibt mindestens ein Auto, das nicht grün ist.)\n\nAllgemein gilt für die Verneinung:\n* Wenn eine Aussage wahr ist, ist die Verneinung falsch.\n* Wenn eine Aussage falsch ist, ist die Verneinung wahr.\n* Eine Aussage kann nicht gleichzeitig wahr und falsch sein.\n* Die Aussagen und können nicht gleichzeitig wahr sein.\n\n=== Und-verknüpfte Aussagen – Konjunktion ===\n|TEMPLATE|\n\nEine Konjunktion ist eine aus zwei Aussagen zusammengesetzte Aussage, die die Wahrheit all ihrer Teilaussagen behauptet. Umgangssprachlich verbindet man zwei Aussagen A und B durch das Bindewort „und“ zu einer Konjunktion „A und B“, in der logischen Sprache verwendet man meist das Zeichen (Schreibweise: ), gelegentlich auch das kaufmännische Und, den Ampersand (&).\n* Sprechweise: A und B\n* Schreibweise: \n* auf Englisch und in der Schaltalgebra auch A AND B\n\nDie Aussage ist immer dann wahr, wenn sowohl A als auch B jeweils wahr sind.\nAndernfalls ist falsch, nämlich dann, wenn entweder A oder B oder beide Aussagen falsch sind.\n\nBeispiele für eine Und-Verknüpfung:\n\nA: 9 ist durch 3 teilbar \nB: 9 ist eine Quadratzahl\n \n\nDiese Teilaussagen und ihre Negationen werden nun durch miteinander verknüpft:\n\n* : 9 ist durch 3 teilbar und 9 ist eine Quadratzahl.\n* : 9 ist nicht durch 3 teilbar und 9 ist eine Quadratzahl.\n* : 9 ist durch 3 teilbar und 9 ist keine Quadratzahl.\n* : 9 ist nicht durch 3 teilbar und 9 ist keine Quadratzahl.\nNur ist wahr, weil wahr ist und auch wahr ist. \n ist falsch, weil falsch ist. \n ist falsch, weil falsch ist. \n ist falsch, weil sowohl als auch falsch\nist.\n\n=== Nichtausschließendes Oder – Disjunktion ===\n|TEMPLATE|\n\nEine Disjunktion ist eine zusammengesetzte Aussage, die behauptet, dass mindestens eine ihrer Teilaussagen wahr ist. Die Disjunktion in diesem Sinn wird auch nichtausschließendes Oder genannt. (Aber Achtung: Die Bezeichnung „Disjunktion“ wurde und wird oft auch für das ausschließende Oder, „entweder … oder“, verwendet – man denke an das Konzept der disjunkten Mengen. Einige Autoren verwenden daher für das Nichtausschließende Oder den Begriff Adjunktion.)\nDas Formelzeichen „“ stammt von dem lateinischen Wort „vel“, was auf deutsch „oder“ bedeutet.\n* Sprechweise: „A oder B“; genauer: „A oder B oder beide“, häufig in juristischen oder medizinischen Texten: „A und/oder B“\n* Schreibweise: \n* auf Englisch und in der Schaltalgebra auch A OR B\n\nDie Aussage ist immer dann wahr, wenn mindestens eine der Teilaussagen A oder B wahr ist, bzw. wenn beide Teilaussagen wahr sind. Andernfalls ist falsch, nämlich dann, wenn sowohl A als auch B falsch sind.\n\nBeispiel für eine Oder-Verknüpfung:\n* A: 9 ist durch 3 teilbar\n* B: 9 ist eine Quadratzahl\n \nDiese Teilaussagen und ihre Negationen werden nun durch miteinander verknüpft:\n* : 9 ist durch 3 teilbar oder 9 ist eine Quadratzahl.\n* : 9 ist nicht durch 3 teilbar oder 9 ist eine Quadratzahl.\n* : 9 ist durch 3 teilbar oder 9 ist keine Quadratzahl.\n* : 9 ist nicht durch 3 teilbar oder 9 ist keine Quadratzahl.\n\n ist wahr, weil sowohl als auch wahr sind. \n ist wahr, weil wahr ist. \n ist wahr, weil wahr ist. \nNur ist falsch, weil sowohl als auch falsch sind.\n\n=== Materiale Implikation ===\n|TEMPLATE|\n\nDie materiale Implikation, auch Konditional oder Subjunktion genannt, drückt die hinreichende Bedingung aus: Sie sagt, dass die Wahrheit des einen Satzes eine hinreichende Bedingung für die Wahrheit des anderen Satzes ist. Man schreibt\n\noder auch\n: und liest\n\n* A ist eine hinreichende Bedingung für B.\n* Schon wenn A, dann B.\n* A setzt voraus, dass B.\n* B ist eine notwendige Bedingung für A. Dass B genau dann eine notwendige Bedingung für A ist, wenn A eine hinreichende Bedingung für B ist, ist eine auf den ersten Blick überraschende und vielleicht kontraintuitive, jedoch zutreffende Feststellung. Das Unterkapitel Hinreichende und notwendige Bedingung bemüht sich, diesen Zusammenhang sichtbarer zu machen.\n* A impliziert B.\n* Nur wenn B, dann A.\noder auch nur\n* Wenn A, dann B.\n\nIn einem Konditional nennt man A das Antezedens, B das Konsequens oder Sukzedens.\n\nBeispiele:\n* Dass es regnet, ist eine hinreichende Bedingung dafür, dass die Straße nass ist.\n* Schon wenn es regnet, ist die Straße nass.\n* Wenn es regnet, ist die Straße nass.\n* Nur wenn die Straße nass ist, kann es regnen.\n* Wenn Person x einen Wagen der Marke y hat, hat x ein Auto.\n* Wenn eine Zahl n durch 6 teilbar ist, dann ist die Zahl n durch 3 teilbar.\n\nDie Lesart „wenn … dann“ ist insofern problematisch, als mit dem natürlichsprachlichen „wenn … dann“ vor allem inhaltliche Zusammenhänge wie Kausalität oder zeitliche Nähe ausgedrückt werden. All das macht die materiale Implikation nicht, sie nennt nur den formalen Zusammenhang: „Dass es regnet, ist eine hinreichende Bedingung dafür, dass die Straße nass ist“. Zur Frage, warum das eine hinreichende Bedingung ist – ob auf Grund eines kausalen Zusammenhangs oder auch nur rein zufällig –, nimmt die materiale Implikation nicht Stellung.\n \n\nAls Umkehrschluss bezeichnet man den Schluss von auf . Für die Beispiele bedeutet das:\n* Wenn die Straße nicht nass ist, regnet es nicht.\n* Wenn Person x kein Auto hat, dann hat x keinen Wagen der Marke y.\n* Wenn die Zahl n nicht durch 3 teilbar ist, dann ist n nicht durch 6 teilbar.\n\nUmgangssprachlich lässt man sich gelegentlich zu weiteren – falschen – Aussagen\nverleiten:\n* Weil es nicht regnete, kann die Straße nicht nass sein. Diese Folgerung ist falsch, da die Straße auch aus anderen Gründen nass werden kann (Rohrbruch, Übung der Feuerwehr\xa0…).\n* x hat keinen Wagen der Marke y, also hat x kein Auto. Falsch, denn er könnte ja einen Wagen der Marke z haben.\n* n ist nicht durch 6 teilbar, also ist n auch nicht durch 3 teilbar. Auch diese Folgerung ist falsch. Die Zahl 15 ist nicht durch 6 teilbar und sehr wohl durch 3.\n\nDas bedeutet: Wenn die Folgerung wahr ist, dann erhält man aus der\nAussage ¬A keine Aussage über B; B kann wahr oder falsch sein. („Ex falso sequitur quodlibet“ – „Aus Falschem folgt Beliebiges“)\n\nDie Implikation ist ein wichtiges Mittel in der Mathematik. Die meisten mathematischen Beweise verwenden das Konzept der Implikation.\n\n=== Bikonditional ===\n|TEMPLATE|\n\nDas Bikonditional, oft auch objektsprachliche Äquivalenz oder materiale Äquivalenz genannt, drückt die hinreichende und notwendige Bedingung aus, sagt also, dass eine Aussage A genau dann zutrifft, wenn eine Aussage B zutrifft. Man schreibt:\n\nund liest\n* A ist genau dann der Fall, wenn B der Fall ist.\n* A genau dann wenn B.\n* A ist äquivalent zu B.\n* A ist dann und nur dann der Fall, wenn B der Fall ist.\n\nAuch beim Bikonditional wird eine rein formale Aussage getroffen, die nichts über einen allfälligen inhaltlichen Zusammenhang von A und B aussagt.\n\nStatt zu sagen, kann man auch sagen, dass A eine hinreichende Bedingung für B und dass B eine hinreichende Bedingung für A ist, also . Tatsächlich sind diese beiden Aussagen logisch äquivalent.\n \n\nBeispiel:\n* Die natürliche Zahl n ist genau dann durch 6 teilbar, wenn n durch 2 und durch 3 teilbar ist. Wenn n durch 6 teilbar ist, dann folgt daraus, dass n durch 2 und durch 3 teilbar ist. Umgekehrt gilt aber auch: Wenn n durch 2 und durch 3 teilbar ist, dann ist n durch 6 teilbar.\n* Heute ist genau dann Dienstag, wenn morgen Mittwoch ist.\n\nDas Bikonditional als zusammengesetzte Aussage innerhalb der logischen Sprache (siehe Objektsprache) wird oft mit dem Konzept der logischen Äquivalenz verwechselt oder vermischt. Die logische Äquivalenz ist eine metasprachliche, meist natürlichsprachlich formulierte Eigenschaft zweier Aussagen der logischen Sprache. Ein Zusammenhang zwischen logischer Äquivalenz und Bikonditional besteht nur insofern, als das Metatheorem gilt, dass ein Bikonditional genau dann eine Tautologie ist, wenn die beiden Aussagen A und B logisch äquivalent sind.\n\n=== Ausschließendes Oder ===\n|TEMPLATE|\n\n \n\nDas ausschließende Oder (Kontravalenz oder Antivalenz), „entweder A oder\xa0B“, besagt, dass genau eine der beiden von ihm verknüpften Aussagen wahr ist. Entsprechend ist ein ausschließendes Oder nicht nur dann falsch, wenn sowohl A als auch B falsch sind, sondern auch, wenn beide wahr sind. (Einige Autoren verwenden für das Ausschließende Oder den Begriff Alternative.)\n\nObwohl das ausschließende Oder ein Konzept ist, mit dem man in der natürlichen Sprache immer wieder zu tun hat, wird es in den meisten logischen Sprachen nicht als eigenständiger Junktor eingeführt. Stattdessen wird das ausschließende Oder zum Beispiel als verneintes Bikonditional ausgedrückt, also als .\n\nGroße Bedeutung genießt das ausschließende Oder hingegen in der Schaltalgebra, wo es meist als XOR (eXclusive OR) aufgeschrieben wird.\n\n=== Verneinung einer verknüpften Aussage (De Morgansche Gesetze) ===\n|TEMPLATE|\n\n==== Verneinung einer Konjunktion ====\nDie Verneinung der Konjunktion „A und B“ (in der logischen Schreibweise: ) lautet „Es ist nicht der Fall, dass A und B zutreffen“ (in der logischen Schreibweise: ).\nDiese ist logisch äquivalent mit der Aussage\n„A ist nicht der Fall, oder B ist nicht der Fall (oder beides)“ (in logischer Schreibweise: ).\n \nEin Beispiel:\n\nWenn man die Aussage\n: Es regnet, und die Erde ist eine Scheibe\nverneinen möchte, dann kann man entweder sagen\n: Es ist nicht der Fall, dass es regnet und die Erde eine Scheibe ist.\noder man sagt\n: Es regnet nicht oder die Erde ist keine Scheibe (oder beides).\n\nIn der Schaltalgebra wird sehr oft der Junktor NAND verwendet, wobei „A NAND B“ denselben Wahrheitswertverlauf hat wie der Ausdruck .\n\n==== Verneinung einer Disjunktion ====\n\nDie Verneinung der Disjunktion „A oder B (oder beides)“ (in der logischen Schreibweise: ) lautet „Es ist nicht der Fall, dass A oder B zutrifft“ (in logischer Schreibweise: ).\nDiese ist logisch äquivalent mit der Aussage\n„A ist nicht der Fall, und B ist nicht der Fall“ (in logischer Schreibweise: ).\n \nEin Beispiel:\n\nWenn man die Aussage\n: Die Erde ist eine Scheibe, oder die Erde ist ein Würfel.\nverneinen möchte, so sagt man\n: Es ist nicht der Fall, dass die Erde eine Scheibe ist oder dass die Erde ein Würfel ist.\nNach dem Gesetz von De Morgan kann man nun aber auch sagen:\n: Die Erde ist keine Scheibe, und die Erde ist kein Würfel\noder in schönerem Deutsch\n: Die Erde ist weder eine Scheibe noch ein Würfel.\n\nIn der Schaltalgebra wird das Konnektiv NOR verwendet, das denselben Wahrheitswertverlauf hat wie die Aussage .\n\n=== Hinreichende und notwendige Bedingung ===\n\nDieser Abschnitt soll den zunächst oft als kontraintuitiv empfundenen Zusammenhang zwischen hinreichender und notwendiger Bedingung, wie er im Abschnitt über die materiale Implikation angesprochen wurde, wiederaufgreifen und näher ausführen.\n\nBetrachten wir einmal mehr die materiale Implikation .\n\nMan sagt: A ist hinreichend für B: Schon wenn A der Fall ist, ist auch B der Fall.\n\nUmgekehrt kann man aber auch sagen: B ist notwendig für A. Ohne B kann A nicht erfüllt sein.\n\nWie kommt dieser Zusammenhang zustande?\n\nWir wissen, dass die Wahrheit von A die Wahrheit von B nach sich zieht, denn A ist ja hinreichende Bedingung für B. Somit ist es einfach nicht möglich, dass A eintritt, ohne dass B damit ebenfalls eintreten würde: B ist also gezwungenermaßen der Fall, wenn A der Fall ist. B ist „notwendig“ für A.\n\nDieser Zusammenhang ist in Wahrheit also ziemlich einfach; Hauptgrund dafür, dass er anfangs oft als kontraintuitiv empfunden wird, ist wahrscheinlich die Schwierigkeit, zwischen den vielen Bedeutungen des umgangssprachlichen „wenn … dann“ einerseits und der rein formalen hinreichenden und notwendigen Bedingung andererseits strikt zu trennen.\n\nMit dem umgangssprachlichen „wenn … dann“ möchte man fast immer einen inhaltlichen (kausalen und/oder temporalen) Zusammenhang zwischen Antecedens und Konsequens ausdrücken: „Regen verursacht Straßennässe“, „Zuerst fällt der Regen,  Konditional von F und G.)\n* Sind F und G zwei (nicht notwendigerweise unterschiedliche) Formeln, so ist auch (F ↔ G) eine Formel. (Diese Formel heißt Bikonditional von F und G.)\n* Nichts anderes ist eine aussagenlogische Formel.\n\n==== Schlussregeln ====\n|TEMPLATE|\n\nSchlussregeln sind allgemein Transformationsregeln (Umformungsregeln), die auf bestehende Formeln angewandt werden und aus ihnen neue Formeln erzeugen. Wenn man einen Kalkül für ein logisches System aufstellt, dann wählt man die Transformationsregeln so, dass sie aus bestehenden Formeln solche Formeln erzeugen, die aus den Ausgangsformeln semantisch folgen – deshalb die Bezeichnung „Schlussregel“ (eine Schlussfolgerung ziehen).\n\nInnerhalb der Syntax sind die Schlussregeln allerdings rein formale Transformationsregeln, denen für sich keinerlei inhaltliche Bedeutung zukommt.\n\nAn konkreten Schlussregeln sollen hier nur zwei angegeben werden: Der Modus ponendo ponens und die Substitutionsregel.\n\n; Modus ponendo ponens\n: Aus einem Satz der Form und einem Satz der Form darf man auf einen Satz der Form schließen; dabei sind und Platzhalter für beliebige Formeln. Zum Beispiel darf man nach dieser Schlussregel aus „Wenn Regen die Straße benetzt, dann ist der Straßenbelag regennass“ und aus „Regen benetzt die Straße“ schließen auf „Der Straßenbelag ist regennass“.\n\n; Substitutionsregel (Ersetzungsregel)\n: In einem Satz dürfen alle Vorkommnisse eines beliebigen Atoms (z.\xa0B. „P“) durch einen beliebig komplexen Satz (z.\xa0B. ) ersetzt werden. Es müssen dabei aber auch wirklich alle Vorkommnisse des gewählten Atoms ersetzt werden, und sie müssen auch wirklich alle durch denselben Satz ersetzt werden.\n: Zum Beispiel darf mittels der Substitutionsregel aus auf geschlossen werden. Man sagt, P werde durch ersetzt bzw. werde für P substituiert (eingesetzt).\n\n|TEMPLATE|\n\n==== Axiome ====\n|TEMPLATE|\n\nAxiome sind ausgezeichnete (im Sinn von: hervorgehobene) Formeln der aussagenlogischen Sprache. Die Auszeichnung besteht darin, dass sie innerhalb eines Beweises oder einer Herleitung (siehe unten) ohne weitere Rechtfertigung verwendet werden.\n\nPragmatisch wählt man solche Formeln als Axiome, die semantisch gesehen Tautologien sind, also immer zutreffen, und die dabei helfen, Beweise zu verkürzen. Innerhalb der Syntax sind die Axiome allerdings rein formale Objekte, denen keinerlei inhaltliche Bedeutung oder Rechtfertigung zukommt.\n\nAxiome sind im Allgemeinen optional, d.\xa0h. ein Kalkül kann auch ganz ohne Axiome auskommen, wenn er ausreichend viele bzw. mächtige Schlussregeln hat. Axiomfreie Kalküle sind zum Beispiel die Systeme natürlichen Schließens oder Baumkalküle.\n\nHier soll exemplarisch ein axiomatischer Kalkül gezeigt werden, und zwar jener, den Whitehead und Russell in ihren 1910–1913 entstandenen Principia Mathematica vorstellten. Der Principia Mathematica-Kalkül für die Aussagenlogik umfasst die folgenden Axiome (von denen das vierte redundant, d.\xa0h. nicht unbedingt erforderlich, weil aus den anderen Axiomen herleitbar ist):\n\nUm aus diesen Axiomen auch solche gültigen Sätze herleiten zu können, die andere als die in den Axiomen vorkommende Junktoren enthalten, werden diese durch folgende Festlegung auf die vorhandenen Junktoren zurückgeführt:\n\nAlternativ zu – wie hier – konkreten Axiomen kann man auch Axiomenschemata angeben, in welchem Fall man auch ohne Substitutionsregel auskommt. Interpretiert man die obigen Axiome als Axiomenschemata, dann stünde z.\xa0B. das erste Axiomenschema, , für unendlich viele Axiome, nämlich alle Ersetzungsinstanzen dieses Schemas.\n\n==== Herleitung und Beweis ====\n|TEMPLATE|\n\nEine Herleitung ist eine Liste von aufsteigend nummerierten Sätzen, die mit einer oder mehreren Annahmen (den Prämissen der Herleitung) oder Axiomen beginnt. Alle auf diese folgenden Sätze sind entweder ebenfalls Axiome (bei manchen Kalkülen sind auch weitere Annahmen zulässig) oder sind aus einer oder mehreren der vorangehenden Zeilen durch Anwendung von Schlussregeln entstanden. Der letzte Satz in der Liste ist die Konklusion der Herleitung.\n\nEine Herleitung ohne Prämissen heißt Beweis. Oft werden aber die Wörter „Herleitung“ und „Beweis“ synonym gebraucht.\n\nWenn es gelingt, aus einer Menge von Annahmen (Prämissen) Δ eine Konklusion P herzuleiten, dann schreibt man auch .\n\nGelingt es, einen Satz P ohne die Verwendung von Annahmen herzuleiten (zu beweisen), dann schreibt man auch: . In diesem Fall wird P Theorem genannt.\n\nDas Zeichen geht auf die Begriffsschrift zurück, jenes Werk, in dem Gottlob Frege 1879 die erste Formalisierung der Prädikatenlogik angegeben hat.\n\nIn der klassischen Aussagenlogik wählt man die Schlussregeln so, dass sich mit ihrer Hilfe alle gültigen Argumente (und nur gültige Argumente) herleiten lassen; die Frage der Gültigkeit wird im folgenden Abschnitt, „Semantik“, behandelt.\n\n=== Semantik ===\n\nAußerhalb der Logik bezeichnet Semantik ein Forschungsgebiet, das sich mit der Bedeutung von Sprache und deren Teilen befasst. Oft wird auch das Wort Semantik gleichbedeutend mit dem Wort Bedeutung verwendet.\n\nAuch innerhalb der Logik geht es bei Semantik um Bedeutung: Darum nämlich, den Ausdrücken einer formalen Sprache – zum Beispiel der hier behandelten Sprache der Aussagenlogik – eine Bedeutung zuzuordnen. In der Logik wird auch das meist sehr formal unternommen.\n\nIm Zentrum der (formalen) Semantik steht eine Auswertungsfunktion (andere Bezeichnungen lauten Bewertungsfunktion, Denotationsfunktion, Wahrheitswertefunktion), die den Formeln der logischen Sprache eine Bedeutung zuordnet. Formal gesprochen ist die Auswertungsfunktion eine Abbildung von der Menge der Formeln der Sprache in die Menge der Wahrheitswerte. Oft wird die Auswertungsfunktion mit dem Großbuchstaben V bezeichnet.\n\nIn der klassischen Aussagenlogik ist die Auswertungsfunktion sehr einfach: Das Prinzip der Zweiwertigkeit fordert, dass sie für jede zu bewertende Formel genau einen von genau zwei Wahrheitswerten liefern muss; und das Prinzip der Extensionalität fordert, dass die Bewertungsfunktion beim Bewerten eines komplexen Satzes nur die Bewertung von dessen Teilsätzen berücksichtigen muss.\n\nJedem Atom, also jedem Satzbuchstaben (Atom) wird durch Festsetzung ein Wahrheitswert zugeordnet. Man sagt: Die Atome werden interpretiert. Es wird also z.\xa0B. festgelegt dass P0 wahr ist, dass P1 falsch ist und dass P2 ebenfalls falsch ist. Damit ist der Bewertung der Bausteine der logischen Sprache Genüge getan. Formal ist eine solche Bewertung –\xa0Interpretation genannt und oft mit dem Kleinbuchstaben v bezeichnet\xa0– eine Funktion im mathematischen Sinn, d.\xa0h. eine Abbildung von der Menge der Atome in die Menge der Wahrheitswerte.\n\nWenn die Auswertungsfunktion V auf ein Atom angewandt wird, d.\xa0h. wenn sie ein Atom bewerten soll, liefert sie die Interpretation dieses Atoms im Sinn des obigen Absatzes. Mit anderen Worten, sie liefert den Wert, den die Bewertung v dem Atom zuordnet.\n\nUm die zusammengesetzten Formeln bewerten zu können, muss für jeden Junktor definiert werden, welchen Wahrheitswert die Bewertungsfunktion für die unterschiedlichen Wahrheitswertkombinationen liefert, den seine Argumente annehmen können. In der klassischen Aussagenlogik geschieht das meist mittels Wahrheitstabellen, weil es nur überschaubar wenige Möglichkeiten gibt.\n\nDer einstellige Junktor ¬, die Negation, ist in der klassischen Aussagenlogik so definiert, dass er den Wahrheitswert seines Arguments ins Gegenteil umkehrt, also „verneint“: Ist die Bewertung einer Formel X wahr, dann liefert die Bewertungsfunktion für ¬X falsch; wird aber X falsch bewertet, dann liefert die Bewertungsfunktion für ¬X wahr. Die Wahrheitstabelle sieht folgendermaßen aus:\n\n \n\nDie Wahrheitswertverläufe der verwendeten zweistelligen Konnektive sind in der klassischen Aussagenlogik wie folgt definiert:\n\n \n\nAllgemein gibt es für die klassische Aussagenlogik vier einstellige und sechzehn zweistellige Junktoren. Die hier behandelte logische Sprache beschränkt sich nur deshalb auf die Junktoren ¬, ∧, ∨, → und\xa0↔, weil diese am gebräuchlichsten sind und weil sie auch inhaltlich noch am ehesten aus der Alltagssprache bekannt sind. Aus formaler Sicht ist die einzige Bedingung, die man bei der Wahl von Junktoren erfüllen möchte, die, dass sich mit den gewählten Junktoren auch alle anderen theoretisch möglichen Junktoren ausdrücken lassen; man sagt: Dass die Menge der gewählten Junktoren funktional vollständig ist. Diese Anforderung ist bei der hier getroffenen Wahl erfüllt.\n\nNäheres zur Frage, wie viele und welche Junktoren es gibt und wie viele Junktoren man benötigt, um funktionale Vollständigkeit zu erreichen, ist im Kapitel Junktor beschrieben.\n\n==== Semantische Gültigkeit, Tautologien ====\n\nSemantische Gültigkeit ist eine Eigenschaft von Formeln oder von Argumenten. (Ein Argument ist die Behauptung, dass aus einigen Aussagen –\xa0den Prämissen\xa0– eine bestimmte Aussage –\xa0die Konklusion\xa0– folgt.)\n\nEine Formel der aussagenlogischen Sprache heißt genau dann semantisch gültig, wenn die Formel unter allen Interpretationen –\xa0d.\xa0h. unter allen Zuordnungen von Wahrheitswerten zu den in ihr vorkommenden Atomen\xa0– wahr ist; wenn sie sozusagen allgemeingültig ist; mit anderen Worten: Wenn die Wahrheitstabelle für diese Aussage in jeder Zeile das Ergebnis wahr zeigt. Man nennt semantisch gültige Formeln auch Tautologien und schreibt, wenn eine Tautologie ist, formal wie folgt:\n\nEin Argument heißt genau dann semantisch gültig, wenn unter der Voraussetzung, dass alle Prämissen wahr sind, auch die Konklusion wahr ist. In der Formulierung von Gottfried Wilhelm Leibniz: Aus Wahrem folgt nur Wahres. Diese Definition muss natürlich ebenfalls formal gefasst werden, und das geschieht wie folgt: Ein Argument ist genau dann semantisch gültig, wenn alle Zuordnungen von Wahrheitswerten zu den in Prämissen und Konklusion vorkommenden Atomen, unter denen die Bewertungsfunktion für alle Prämissen den Wert wahr liefert, auch für die Konklusion den Wert wahr liefert.\n\nUm auszudrücken, dass aus einer Menge von Formeln (der Prämissenmenge) eine Formel (die Konklusion) semantisch folgt, schreibt man formal wie folgt:\n\nBeachte die graphische Ähnlichkeit und die inhaltliche Verschiedenheit zwischen (Kapitel „Herleitung und Beweis“) und (Siehe: Semantische Folgerung): Die erste Formulierung –\xa0\xa0– drückt die syntaktische Gültigkeit des Arguments aus, sagt also, dass aus den Formeln in mit den Schlussregeln des gewählten Kalküls die Formel hergeleitet werden kann. hingegen behauptet die semantische Gültigkeit, die in der klassischen Aussagenlogik wie in den vorangegangenen Absätzen als das Leibniz’sche Aus Wahrem folgt nur Wahres definiert ist.\n\n|TEMPLATE|\n\n==== Wichtige semantische Eigenschaften: Erfüllbarkeit, Widerlegbarkeit und Unerfüllbarkeit ====\n\nNeben der Eigenschaft der Gültigkeit (Allgemeingültigkeit) gibt es einige andere wichtige Eigenschaften: Erfüllbarkeit, Widerlegbarkeit und Unerfüllbarkeit. Im Gegensatz zur Gültigkeit, die Eigenschaft von Formeln oder von Argumenten sein kann, sind Erfüllbarkeit, Widerlegbarkeit und Unerfüllbarkeit Eigenschaften von Sätzen oder von Satzmengen.\n\n* Eine Formel heißt erfüllbar, wenn es mindestens eine Interpretation der in ihr vorkommenden Atome (Satzbuchstaben) gibt, unter der die Formel wahr ist.\n* Eine Formel heißt widerlegbar, wenn es mindestens eine Interpretation der in ihr vorkommenden Atome gibt, unter der die Formel falsch ist.\n* Eine Formel heißt unerfüllbar, wenn sie unter allen Interpretationen der in ihr vorkommenden Satzbuchstaben falsch ist.\n* Eine Formelmenge heißt erfüllbar, wenn alle in ihr enthaltenen Formeln erfüllbar sind.\n\nDie Frage, ob eine Formel (oder eine Formelmenge) eine der genannten Eigenschaften hat, ist ebenso wie die Frage, ob eine Formel allgemeingültig, d.\xa0h. eine Tautologie ist, für allgemeine Formeln nicht effizient lösbar: Zwar ist die Wahrheitstafel ein Entscheidungsverfahren für jede dieser Fragen, doch umfasst eine Wahrheitstafel für eine Aussage bzw. eine Aussagemenge in n Atomen Zeilen; das Wahrheitstafelverfahren ist nichts anderes als ein Brute-Force-Verfahren.\n\nJede dieser Fragestellungen kann auf die Frage zurückgeführt werden, ob eine bestimmte Formel erfüllbar ist:\n* Eine Formel ist genau dann eine Tautologie, wenn unerfüllbar ist.\n* Eine Formel ist genau dann widerlegbar, wenn erfüllbar ist.\n\nDie Frage, ob eine Aussage erfüllbar ist, wird Erfüllbarkeitsproblem oder SAT-Problem (nach dem englischen Wort für Erfüllbarkeit, satisfiability) genannt. Das SAT-Problem spielt eine wichtige Rolle in der theoretischen Informatik und Komplexitätstheorie. Das Erfüllbarkeitsproblem für allgemeine (beliebige) Formeln ist NP-vollständig, d.\xa0h. (unter der Voraussetzung, dass P ungleich NP) nicht in polynomialer Laufzeit lösbar.\n\nFür bestimmte echte Teilmengen der Formeln der aussagenlogischen Sprache ist das SAT-Problem dennoch schneller, d.\xa0h. in polynomial beschränkter Rechenzeit lösbar. Eine solche Teilmenge sind die Horn-Formeln, das sind Konjunktionen von Disjunktionen, deren Disjunkte verneinte oder unverneinte Atome sind, wobei innerhalb einer solchen Disjunktion allerdings höchstens ein Atom unverneint sein darf.\n\n==== Algebraische Sicht ====\n\nWenn man die Semantik betrachtet, die hier für die klassische Aussagenlogik aufgestellt wurde, dann erkennt man gewisse Gesetzmäßigkeiten. Wird z.\xa0B. die Auswertungsfunktion auf eine Aussage der Form X ∧ W angewendet, wobei W eine beliebige wahre Aussage sein soll, dann stellt man fest, dass die Auswertungsfunktion für X ∧ W immer den Wahrheitswert wahr liefert, wenn V(X)=wahr ist (das heißt V(X∧W)=V(X)). Von der Struktur her gleichwertige Gesetzmäßigkeiten gelten auch in anderen Semantiken, auch in solchen, die für ganz andere, nichtlogische Systeme aufgestellt werden. Für die Arithmetik gilt z.\xa0B., dass die dortige Bewertungsfunktion (hier VArithmetik genannt) für einen Ausdruck der Form X + Y immer den Wert von X liefert, sofern der Wert von Y null ist: VArithmetik(X+Y)=VArithmetik(X), wenn VArithmetik(Y) = null ist.\n\nEine formale Wissenschaft, die solche strukturellen Gesetzmäßigkeiten untersucht, ist die abstrakte Algebra (meist Teilgebiet der Mathematik, aber auch der Informatik). In der abstrakten Algebra wird zum Beispiel untersucht, für welche Verknüpfungen es ein neutrales Element gibt, d.\xa0h. ein Element N, das für eine Verknüpfung op dazu führt, dass (für beliebiges X) gilt: X op N = X. So würde man aus algebraischer Sicht sagen, dass es für die klassische aussagenlogische Konjunktion genau ein neutrales Element gibt, nämlich wahr, und dass es für die Addition in der Arithmetik ebenfalls genau ein neutrales Element gibt, nämlich die Zahl Null. Nur am Rande sei erwähnt, dass es auch für andere Junktoren neutrale Elemente gibt; das neutrale Element für die Disjunktion ist falsch: V(X ∨ F) = V(X), wenn V(F)=falsch ist.\n\nDie formale Algebra betrachtet formale Semantiken rein nach ihren strukturellen Eigenschaften. Sind diese identisch, dann besteht zwischen ihnen aus algebraischer Sicht kein Unterschied. Aus algebraischer Sicht, genauer: Aus Sicht der formalen Algebra ist die Semantik für die klassische Aussagenlogik eine zweiwertige Boolesche Algebra. Andere formale Systeme, deren Semantiken jeweils eine Boolesche Algebra bilden, sind die Schaltalgebra und die elementare Mengenlehre. Aus algebraischer Sicht besteht daher zwischen diesen Disziplinen kein Unterschied.\n\n==== Normalformen ====\n\nJede aussagenlogische Formel lässt sich in eine äquivalente Formel in\nkonjunktiver Normalform und eine äquivalente Formel in\ndisjunktiver Normalform umformen.\n\n=== Metatheorie ===\n\nIn der Metatheorie werden die Eigenschaften von logischen Systemen untersucht: Das logische System ist in der Metatheorie der Untersuchungsgegenstand.\n\nEine metatheoretische Fragestellung ist zum Beispiel die, ob in einem Kalkül ein Widerspruch hergeleitet werden kann.\n\nDer vorliegende Abschnitt soll einige wichtige metatheoretische Fragestellungen aus dem Blickwinkel der Aussagenlogik betrachten.\n\n; Konsistenz\n: Ein Kalkül wird genau dann konsistent genannt, wenn es unmöglich ist, mit Hilfe seiner Axiome und Regeln einen Widerspruch herzuleiten, d.\xa0h. eine Aussage der Form P ∧ ¬ P (z.\xa0B. „Hugo ist groß, und Hugo ist nicht groß“). Für einen Kalkül, der in der Aussagenlogik verwendet werden soll, ist das eine Mindestanforderung.\n: Ist es in einem Kalkül möglich, einen Widerspruch herzuleiten, dann wird der Kalkül inkonsistent genannt.\n: Es gibt formale Systeme, in denen solch ein Widerspruch hergeleitet werden kann, die aber durchaus sinnvoll sind. Für solche Systeme wird ein anderer Konsistenzbegriff verwendet: Ein Kalkül ist konsistent, wenn in ihm nicht alle Formeln herleitbar sind (siehe parakonsistente Logik).\n: Es lässt sich leicht zeigen, dass für die klassische Logik die beiden Konsistenzbegriffe zusammenfallen: In der klassischen Logik lässt sich aus einem Widerspruch jeder beliebige Satz herleiten (dieser Sachverhalt wird Ex falso quodlibet genannt), d.\xa0h. wenn ein klassischer Kalkül auch nur einen Widerspruch herleiten könnte, also im ersten Sinn inkonsistent wäre, dann könnte er jede Aussage herleiten, wäre also im zweiten Sinn inkonsistent. Wenn umgekehrt ein Kalkül inkonsistent im zweiten Sinn ist, also in ihm jede Aussage herleitbar ist, dann ist insbesondere auch jeder Widerspruch herleitbar und ist er auch inkonsistent im ersten Sinn.\n\n; Korrektheit\n: Ein Kalkül heißt genau dann korrekt (semantisch korrekt), wenn in ihm nur solche Formeln hergeleitet werden können, die auch semantisch gültig sind. Für die klassische Aussagenlogik bedeutet das einfacher: Ein Kalkül ist genau dann korrekt, wenn in ihm nur Tautologien bewiesen und nur gültige Argumente hergeleitet werden können.\n: Ist es in einem aussagenlogischen Kalkül möglich, mindestens ein ungültiges Argument herzuleiten oder mindestens eine Formel zu beweisen, die keine Tautologie ist, dann ist der Kalkül inkorrekt.\n\n; Vollständigkeit\n: Vollständig (semantisch vollständig) heißt ein Kalkül genau dann, wenn in ihm alle semantisch gültigen Formeln hergeleitet werden können; für die klassische Aussagenlogik: Wenn in ihm alle Tautologien hergeleitet werden können.\n\n; Adäquatheit\n: Ein Kalkül heißt genau dann im Hinblick auf eine spezielle Semantik adäquat, wenn er (semantisch) korrekt und (semantisch) vollständig ist.\n\nEin metatheoretisches Resultat ist zum Beispiel die Feststellung, dass alle korrekten Kalküle auch konsistent sind. Ein anderes metatheoretisches Resultat ist die Feststellung, dass ein konsistenter Kalkül nicht automatisch korrekt sein muss: Es ist ohne weiteres möglich, einen Kalkül aufzustellen, in dem zwar kein Widerspruch hergeleitet werden kann, in dem aber z.\xa0B. die nicht allgemeingültige Aussage der Form „A ∨ B“ hergeleitet werden kann. Ein solcher Kalkül wäre aus ersterem Grund konsistent, aus letzterem Grund aber nicht korrekt.\n\nEin weiteres, sehr einfaches Resultat ist die Feststellung, dass ein vollständiger Kalkül nicht automatisch auch korrekt oder nur konsistent sein muss. Das einfachste Beispiel wäre ein Kalkül, in dem jede Formel der aussagenlogischen Sprache herleitbar ist. Da jede Formel herleitbar ist, sind alle Tautologien herleitbar, die ja Formeln sind: Das macht den Kalkül vollständig. Da aber jede Formel herleitbar ist, ist insbesondere auch die Formel P0 ∧ ¬ P0 und die Formel A ∨ B herleitbar: Ersteres macht den Kalkül inkonsistent, letzteres inkorrekt.\n\nDas Ideal, das ein Kalkül erfüllen sollte, ist Korrektheit und Vollständigkeit: Wenn das der Fall ist, dann ist er der ideale Kalkül für ein logisches System, weil er alle semantisch gültigen Sätze (und nur diese) herleiten kann. So sind die beiden Fragen, ob ein konkreter Kalkül korrekt und/oder vollständig ist und ob es für ein bestimmtes logisches System überhaupt möglich ist, einen korrekten und vollständigen Kalkül anzugeben, zwei besonders wichtige metatheoretische Fragestellungen.\n\n== Abgrenzung und Philosophie ==\n\nDie klassische Aussagenlogik, wie sie hier ausgeführt wurde, ist ein formales logisches System. Als solches ist sie eines unter vielen, die aus formaler Sicht gleichwertig nebeneinander stehen und die ganz bestimmte Eigenschaften haben: Die meisten sind konsistent, die meisten sind korrekt, etliche sind vollständig, und einige sind sogar entscheidbar. Aus formaler Sicht stehen die logischen Systeme in keinem Konkurrenzverhalten hinsichtlich Wahrheit oder Richtigkeit.\n\nVon formalen, innerlogischen Fragen klar unterschieden sind außerlogische Fragen: Solche nach der Nützlichkeit (Anwendbarkeit) einzelner Systeme für einen bestimmten Zweck und solche nach dem philosophischen, speziell metaphysischen Status einzelner Systeme.\n\nDie Nützlichkeitserwägung ist die einfachere, bezüglich deren Meinungsunterschiede weniger tiefgehend bzw. weniger schwerwiegend sind. Klassische Aussagenlogik zum Beispiel bewährt sich in der Beschreibung elektronischer Schaltungen (Schaltalgebra) oder zur Formulierung und Vereinfachung logischer Ausdrücke in Programmiersprachen. Prädikatenlogik wird gerne angewandt, wenn es darum geht, Faktenwissen zu formalisieren und automatisiert Schlüsse daraus zu ziehen, wie das unter anderem im Rahmen der Programmiersprache Prolog geschieht. Fuzzy-Logiken, nonmonotone, mehrwertige und auch parakonsistente Logiken sind hochwillkommen, wenn es darum geht, mit Wissensbeständen umzugehen, in denen Aussagen mit unterschiedlich starkem Gewissheitsgrad oder gar einander widersprechende Aussagen abgelegt werden sollen und dennoch sinnvolle Schlüsse aus dem Gesamtbestand gezogen werden sollen. Auch wenn es je nach Anwendungsfall sehr große Meinungsunterschiede geben kann, welches logisches System besser geeignet ist, ist die Natur des Problems für alle Beteiligten unmittelbar und in gleicher Weise greifbar. Einzelwissenschaftliche Überlegungen und Fragestellungen spielen sich überwiegend in diesem Bereich ab.\n\n(Noch) kontroverser als solche pragmatischen Überlegungen sind Fragestellungen philosophischer und metaphysischer Natur. Geradezu paradigmatisch ist die Frage, „welches logische System richtig ist“, wobei „richtig“ hier gemeint ist als: Welches logische System nicht nur einen Teilaspekt der Wirklichkeit modellhaft vereinfacht, sondern die Wirklichkeit, das Sein als Ganzes adäquat beschreibt. Zu dieser Fragestellung gibt es viele unterschiedliche Meinungen einschließlich der vom philosophischen Positivismus eingeführten Meinung, dass die Fragestellung als Ganzes sinnlos ist.\n\nIn den Bereich metaphysischer Fragestellungen fällt auch die Frage, ob es so etwas wie ein metaphysisches Prinzip der Zweiwertigkeit gebe, ob also Aussagen über die Wirklichkeit durchgehend ins Schema wahr/falsch passen oder nicht. Diese Frage ist unabhängig von der Frage, ob die Beschäftigung mit zwei- oder mehrwertigen Logiken praktisch sinnvoll ist: Selbst wenn ein metaphysisches Prinzip der Zweiwertigkeit herrscht, könnte man anwendungspraktisch mehrwertige Logiken nützen, etwa dazu, epistemische Sachverhalte zu fassen, zum Beispiel aus Aussagen zu schließen, die zwar metaphysisch wahr oder falsch sind, von denen aber nicht oder noch nicht bekannt ist, welches von beidem der Fall ist. Umgekehrt kann man auch dann, wenn ein solches metaphysisches Prinzip nicht gilt, zweiwertige Logik wegen ihrer Einfachheit für solche Anwendungen bevorzugen, bei denen nur mit solchen Sätzen umgegangen werden muss, die tatsächlich wahr oder falsch sind.\n\nDie Frage nach einem metaphysischen Prinzip der Zweiwertigkeit ist wie die meisten metaphysischen Fragen nicht endgültig zufriedenstellend beantwortet. Ein früher Einwand gegen ein solches Prinzip, den Aristoteles zur Diskussion stellte, war das Thema der Aussagen über zukünftige Sachverhalte („Morgen wird es regnen“). Wenn Aussagen über Zukünftiges schon heute wahr oder falsch wären, so wird argumentiert, dann müsse die Zukunft bis ins letzte Detail vorbestimmt sein. Ein anderer Einwand, der vorgebracht wird, ist, dass es Aussagen gibt, deren Wahrheit praktisch oder theoretisch nicht festgestellt werden kann – zum Beispiel lässt sich die Wahrheit von „Der Rasen vor dem Weißen Haus bestand am 1. Februar 1870 aus genau 6.120.375,4 Grashalmen“ einfach nicht feststellen.\n\nBefürworter eines metaphysischen Zweiwertigkeitsprinzips berufen sich oft auf das Verhalten von Metatheoretikern, also von Mathematikern oder Logikern, die Aussagen über formale Systeme treffen: Egal wie mehrwertig oder nichtklassisch das untersuchte System ist, die dabei getroffenen Metavermutungen, Metabehauptungen und Metafeststellungen sind immer zweiwertig: Ein Kalkül, auch ein parakonsistenter oder nonmonotoner, wird immer als entweder konsistent oder inkonsistent betrachtet, und ein logisches System ist immer entweder korrekt oder inkorrekt, vollständig oder nicht vollständig, entscheidbar oder unentscheidbar, niemals „ein bisschen“ von beidem. Befürworter deuten das als Hinweis darauf, dass es in der Wirklichkeit tatsächlich eine strenge Unterscheidung nach wahr und falsch gebe oder dass es zumindest sinnvoll ist, eine solche anzunehmen.\n\nEine andere philosophische Fragestellung ist die nach dem metaphysischen Status des Untersuchungsgegenstands der Logik, also danach, was logische Systeme, Kalküle, Wahrheitswerte eigentlich „sind“.\n\nDer platonische Standpunkt besteht darin, dass die in der Logik verwendeten Zeichen und Konstrukte eine außerlogische Bedeutung haben, dass sie Namen für real existierende (wenn auch natürlich nicht-physikalische) Gegenstände sind. In diesem Sinn gäbe es so etwas wie das Wahre und das Falsche, abstrakte Gegenstände, die von den Zeichen „wahr“ und „falsch“ benannt werden.\n\nDer Gegenpol zum Platonismus wäre der Nominalismus, der Existenz nur den Zeichen zuspricht, die in der Logik manipuliert werden. Gegenstand der Logik sind Zeichen, und die Tätigkeit der Logiker ist die Manipulation von Zeichen. Die Zeichen bezeichnen aber nichts, so etwas wie das Wahre oder das Falsche gibt es also nicht. Im Grundlagenstreit der Mathematik entspräche der nominalistischen Position die formalistische Richtung.\n\nEine Mittelstellung nähme der philosophische Konstruktivismus ein, demzufolge die Zeichen zwar keine unabhängig existierenden Gegenstände bezeichnen, durch den Umgang mit den Zeichen aber Gegenstände konstruiert werden.\n\n== Literatur ==\n\n* Jon Barwise, John Etchemendy: The Language of First Order Logic (= CSLI Lecture Notes. Bd. 23). 2. Auflage, revised and expanded. Center for the Study of Language and Information, Stanford CA 1991, ISBN 0-937073-74-1.\n* Ansgar Beckermann: Einführung in die Logik. 2., neu bearbeitete und erweiterte Auflage. de Gruyter, Berlin u.\xa0a. 2003, ISBN 3-11-017965-2.\n* Karel Berka, Lothar Kreiser: Logik-Texte. Kommentierte Auswahl zur Geschichte der modernen Logik. 4., gegenüber der 3., erweiterte, durchgesehene Auflage. Akademie-Verlag, Berlin 1986.\n* Wolfgang Detel: Grundkurs Philosophie. Band 1: Logik (= Universal-Bibliothek. Nr. 18468). Reclam, Stuttgart 2007, ISBN 978-3-15-018468-4.\n* Wilfrid Hodges: Logic. Penguin Books, Harmondsworth 1977, ISBN 0-14-021985-4 (2. Auflage. ebenda 2001 ISBN 0-14-100314-6).\n* Rüdiger Inhetveen: Logik. Eine dialog-orientierte Einführung (= Eagle. Bd. 2). Edition am Gutenbergplatz, Leipzig 2003, ISBN 3-937219-02-1.\n* E. J. Lemmon: Beginning Logic. Nelson, London 1965 (2. Auflage. Chapman & Hall, London 1987, ISBN 0-412-38090-0).\n* Wesley C. Salmon: Logik. (= Universal-Bibliothek. Nr. 7996). Reclam Stuttgart 1983, ISBN 3-15-007996-9.\n\n== Weblinks ==\n|TEMPLATE|\n* |TEMPLATE|\n* Vorlesungsmitschnitt Mathematik I Uni Tübingen. Die ersten zwei Stunden handeln ausführlich von Wahrheitstabellen.\n* Christian Spannagel: Aussagen- und Prädikatenlogik. Vorlesungsreihe, 2012.\n\n== Einzelnachweise und Anmerkungen ==\n\n|TEMPLATE| "
    val matches = PlagiarismFinderTest.finder.findPlagiarisms(input + input2, new HyperParameters())

    matches.foreach(println)
    matches.foreach(x => println("[" + (input + input2).substring(x._1.start, x._1.end) + "] Matches: " + x._2))
    val str2 = matches.toString
    val containsExpectedPlagiarismText = str2.startsWith("Map") && str2.endsWith(")") && str2.contains("formelzeichen, stammt, von, dem, lateinischen, wort, vel, was, auf, deutsch, oder, bedeutet, sprechweise")
    assert(containsExpectedPlagiarismText)


  }

  @Test def testPlagiarismFinderArticleNotPlagiate() {

    val input = raw"Braten fragen ers war kinder ins. Dame ja sehr mich ware wahr sa bist. wird immer als entweder Em lehnte halber je gesund. Im lustige anblick zu abwarts ri erstieg verband. Tat neu geschwatzt erkundigte schuchtern frohlicher nachmittag vor flu. Zog nun das verdrossen nachtessen grasgarten geschwatzt nun. Frieden ja bi um beinahe besorgt schritt uberall te. Hast tod nur hut bart dame erst die esse. Dem lustige nun man nachtun den hinuber eleganz gefreut mehrere. Pa dachern horchte gelesen endlich se lauernd es. Auf gepfiffen spazieren wei plaudernd. Herd scho ehe dort sie lauf ihn lag erst ware. Tod loben kommt brief karte hut. Die neuen aus augen jeder sitte. En wenn pa vers grob orte hing um ab. Grundstuck mu verbergend zaunpfahle es drechslers handarbeit. Aus vertreiben ubelnehmen lie wer hinstellte uns sauberlich neidgefuhl. Herein bugeln wo dessen herrje zu um sa drohte jemals. Du pa sehr sich nahm tate. Richtig wo dichten fadelte so da steilen wandern einfand. Gesicht lebhaft en woruber wo ku langsam. Blieb gegen am einer se. Kammertur schneider he um herkommen vorbeugte. Nachher wo geruckt stellte du. Aus brauerei irgendwo vergrast auf verlohnt. Beschlo ku es wendete blickte ab. Arbeit fellen bei kannst fremde winter wollte tag nun tor. Fu en leuchtete du verwegene nachgehen la kindliche zierliche. Pa erschrak hinunter zwischen nirgends zu en ratloses. Die fur herde abend als gehen adieu danke. Grad frau aber bis sei ruth. Langsam wahrend heiland da richten sa bedeckt leuchte wo ja. Ist lohgruben furchtete betrubtes nur sudwesten ausgeruht ausdenken. Ferne namen denen regen lag nie davon naher. Bilderbuch dir erkundigte fluchtigen aus geschwatzt zaunpfahle wie. Das besonderes vertreiben hut grashalden fur aneinander ihr. "
    val input2 = raw"Lied ri fiel hell dann ubel he mi fu. Ihr gesellen arbeiter vom gekommen lampchen gut. Grund konsistent, aus letzterem Grund aber Vor ubelnehmen gearbeitet sauberlich fur hei grundstuck. Schlupfte uberhaupt musterung das lie gestorben. Grundstuck dammerigen birkendose man sie wie. Gefallt glatter ihn geh ein schlich eigenes. Tag ten ists nur esse auch mirs.       Ab am es angenommen da halboffene uberwunden. Flei habe soll oder das alt. Ehe umwolkt kapelle dir diesmal stiefel bosheit. Argerlich wunderbar hol verstehen nebendran senkrecht sie blo wie. Gebaut wahres madele seines gro vom ihm mutter. Fragen und minute ruhten mussen uhr. Te du um moge leer heut zu. Freute in ja je braves leicht. Dazwischen dammerigen kartoffeln erhaltenen es wasserkrug augenblick um.      Gefallen eigentum schuppen so ei feinheit. Gegen er kinde kenne mu se. Im zu sauber labsal werden en heraus sterne mu. Trostlos der das streckte gefallts ins tag begierig. Gebrauch eleonora horchend gedanken als ich befehlen. Geschirr manchmal an spateren hinunter es sichtbar er ri einander. Herkommen betrubtes einfacher es so am kreiselnd verwegene schnupfen.      Vor tor wohlgefuhl bis begleitete vergnugter. Mu im uberall zu umwolkt so reichen. Lachte ihm sohlen sto nah jedoch sie. Sorglosen bettstatt vorbeugte da um verlangst. Gehe oben ige blo moge. Gerbersteg ige ein weg hereintrat launischen vielleicht getunchten gut erhaltenen. Warm la mein leid aber se wo bist. Zweig viere losen des das wie tut neues komme.      He bangigkeit uberwunden lehrlingen da scherzwort nettigkeit en hoffnungen. Ja fehlen pfeife pa kommen gassen langen regnen. Te vorn halb es ziel lass so. Hinabsah gut wir unbeirrt tadellos talseite schreien wer. Se flanierte in wo rausperte tanzmusik. Alten angst zwirn sa um. Nachsten des hausfrau und nirgends ein her.      Auskleiden weg brotkugeln getunchten dammerigen grundstuck flo gut ten. Kopf auch fand bi en so je seid vorn. Viere blatt ehe guter hut. Ihre ohne noch in lauf mich zu im. Wahrend la in madchen ja so gedacht. Auskleiden man werkstatte das fluchtigen gib ton."

    val matches = PlagiarismFinderTest.finder.findPlagiarisms(input + input2, new HyperParameters())
    matches.foreach(println)
    matches.foreach(x => println("[" + (input + input2).substring(x._1.start, x._1.end) + "] Matches: " + x._2))
    val str2 = matches.toString
    val containsExpectedPlagiarismText = !str2.isEmpty && !str2.contains("Hinabsah") && str2.length < 10
    assert(containsExpectedPlagiarismText)

  }

  @Test def testPlagiarismFinderSentencePlagiateInSeveralArticlesWithHyperparameters() {
    val input = raw"Actinium radioaktives chemisches Element dem Elementsymbol Ac der Ordnungszahl 89. Im Periodensystem Elemente steht es in 3.\xa0IUPAC-Gruppe, der Scandiumgruppe. Das Element Metall gehört zur 7.\xa0Periode, d-Block. Es der Namensgeber der Gruppe der Actinoide, der folgenden 14 Elemente. Kommentierte Auswahl zur Geschichte der modernen Logik. 4., gegenüber der 3., erweiterte, durchgesehene Auflage. Akademie-Verlag, Berlin 1986.\n* Wolfgang Detel: Grundkurs Philosophie. Band 1: Logik (= Universal-Bibliothek. Nr. 18468). Reclam, Stuttgart 2007. "
    val input2 = raw"ES\n: Josef Maria Camenzind (1904–1984), CH\n: Richard Owen Cambridge (1717–1802), GB\n: Andrea Camilleri (* 1925), IT\n: Luís de Camões (1524–1580), PT\n: Paul-Henri Campbell (* 1982), USA/D\n: Thomas Campbell (1774–1844), GB\n: Joachim Heinrich Campe (1746–1818), D\n: Thomas Campion (1567–1620), GB\n: Maximiano Campos (1941–1998), BR\n: Albert Camus (1913–1960), FR\n: Matilde Camus (1919–2012), ES\n: Trudi Canavan (* 1969), AUS\n: Elias Canetti (1905–1994)\n: Veza Canetti (1897–1963), AT\n: Hans Caninenberg (1913–2008), D\n: Friedrich Rudolf Ludwig von Canitz (1654–1699), D\n: Ivan Cankar (1876–1918), SLO\n: Cao Cao (155–220), CN\n: Truman Capote (1924–1984), US\n: Alex Capus (* 1961), D\n\n=== Car–Caz ===\n: Emilio Carballido (1925–2008), MEX\n: Lorenzo Carcaterra (* 1954), US\n: Lara Cardella (* 1969), IT\n: Ernesto Cardenal (* 1925), NIC\n: Marie Cardinal (1928/29–2001), FR\n: Giosuè Carduc"
    val matches = PlagiarismFinderTest.finder.findPlagiarisms(input + input2, new HyperParameters(maxAverageDistance = 8, minimumSentenceLength = 10, maxDistanceBetweenNgrams = 8))
    matches.foreach(println)
    matches.foreach(x => println("[" + (input + input2).substring(x._1.start, x._1.end) + "] Matches: " + x._2))
    val str2 = matches.toString
    val containsExpectedPlagiarismText = !str2.isEmpty && str2.contains("maximiano, campos, 1941") && str2.contains("akademie, verlag, berlin")
    assert(containsExpectedPlagiarismText)
  }


  @Test def testPlagiarismFinderSentencePlagiateInOneArticlesWithHyperparameters() {
    val input = raw"Diana Gabaldon (1952)\n:Hans-Georg Gadamer (1900–2002)\n:Carlo Emilio Gadda (1893–1973),.!?Catharina Regina von Greiffenberg (1633–1694), AT\n:Leo Greiner (1876–1928),.!?Jean Giraud (1938–2012)\n:Jean Giraudoux (1882–1944)\n:Hans Bernd Gisevius"
    val input2 = raw":Gerald Brosseau Gardner (1884–1964), GB\n:John Gardner (1933–1982)\n:John Edmund Gardner (1926–2007)"
    val matches = PlagiarismFinderTest.finder.findPlagiarisms(input + input2, new HyperParameters(maxAverageDistance = 5, minimumSentenceLength = 1, maxDistanceBetweenNgrams = 3));
    matches.foreach(x => println("[" + (input + input2).substring(x._1.start, x._1.end) + "] Matches: " + x._2))
    val str2 = matches.toString
    println("-------------------------------------------" + str2)
    val containsExpectedPlagiarismText = str2.contains("christian, fürchtegott") && str2.contains("katharina, geiser") && !str2.isEmpty
    assert(containsExpectedPlagiarismText)

  }
}